<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards">
	<description>WooCommerce dev PHP_CodeSniffer ruleset.</description>

	<arg value="ps"/>
	<arg name="parallel" value="20"/>
	<arg name="extensions" value="php"/>

    <!-- Exclude paths -->
	<exclude-pattern>./dev/*</exclude-pattern>
	<exclude-pattern>./dist/*</exclude-pattern>
	<exclude-pattern>./release/*</exclude-pattern>
	<exclude-pattern>./docker/*</exclude-pattern>
	<exclude-pattern>./node_modules/*</exclude-pattern>
	<exclude-pattern>./vendor/*</exclude-pattern>
	<exclude-pattern>./vendor-dist/*</exclude-pattern>
	<exclude-pattern>./lib/*</exclude-pattern>
	<exclude-pattern>./tests/e2e/deps/*</exclude-pattern>
	<exclude-pattern>./tests/e2e/docker/*</exclude-pattern>

	<!-- Configs -->
	<config name="minimum_supported_wp_version" value="6.0" />
	<config name="testVersion" value="7.3-" />

	<!-- Rules -->
	<rule ref="WooCommerce-Core" >
		<exclude name="Generic.Commenting.Todo"/>

		<!-- This rule is currently generating some false positives, it would be worth retrying after PHPCS upgrades -->
		<exclude name="Squiz.Commenting.FunctionCommentThrowTag.WrongNumber"/>
		<exclude name="Squiz.Commenting.FunctionComment.EmptyThrows"/>
		<exclude name="Generic.Arrays.DisallowShortArraySyntax.Found"/>
	</rule>

	<!-- Disallow long array syntax -->
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
	<rule ref="Universal.Arrays.DisallowShortArraySyntax">
		<exclude-pattern>./*</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array" value="woocommerce-payments" />
		</properties>
	</rule>

	<rule ref="WordPress.Security.EscapeOutput">
		<properties>
			<property name="customEscapingFunctions" type="array" value="WC_Payments_Utils,esc_interpolated_html" />
		</properties>
	</rule>

	<!-- Allow checks for custom capabilities in user_can calls -->
	<rule ref="WordPress.WP.Capabilities">
		<properties>
			<property name="custom_capabilities" type="array" value="manage_woocommerce" />
		</properties>
	</rule>

	<rule ref="PHPCompatibility">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<rule ref="WordPress.Files.FileName">
		<exclude-pattern>tests/*</exclude-pattern>
		<exclude-pattern>includes/multi-currency</exclude-pattern>
		<exclude-pattern>src</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.AlternativeFunctions.file_system_operations_file_put_contents">
		<exclude-pattern>./.github/workflows/*</exclude-pattern>
	</rule>

	<rule ref="Generic.Commenting">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<rule ref="WooCommerce.Commenting.CommentHooks.MissingHookComment">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<rule ref="Squiz.Commenting.FunctionComment">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<rule ref="Squiz.Commenting.FunctionCommentThrowTag.Missing" />

	<!-- We don't need to do nonce checks in unit test code -->
	<rule ref="WordPress.Security.NonceVerification.Recommended">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<rule ref="PEAR.WhiteSpace.ObjectOperatorIndent" />

	<!-- Custom WCPay rules -->
	<rule ref="./dev/phpcs/ruleset.xml"/>

	<!-- Check the class structure (ordering of methods, properties, etc.) -->
	<rule ref="SlevomatCodingStandard.Classes.ClassStructure">
		<properties>
			<property name="groups" type="array">
				<element value="uses"/>
				<element value="constants"/>
				<element value="properties"/>
				<element value="enum cases"/>

				<element value="constructor, static constructors"/>
				<element value="abstract methods" />
				<element value="all public methods, magic methods"/>
				<element value="protected methods"/>
				<element value="methods"/>
			</property>
		</properties>
		<include-pattern>src/*</include-pattern>
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

</ruleset>

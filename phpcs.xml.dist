<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards">
	<description>WooCommerce dev PHP_CodeSniffer ruleset.</description>

	<arg value="ps"/>
	<arg name="parallel" value="20"/>
	<arg name="extensions" value="php"/>

    <!-- Exclude paths -->
	<exclude-pattern>./dev/*</exclude-pattern>
	<exclude-pattern>./dist/*</exclude-pattern>
	<exclude-pattern>./release/*</exclude-pattern>
	<exclude-pattern>./docker/*</exclude-pattern>
	<exclude-pattern>./node_modules/*</exclude-pattern>
	<exclude-pattern>./vendor/*</exclude-pattern>
	<exclude-pattern>./vendor-dist/*</exclude-pattern>
	<exclude-pattern>./lib/*</exclude-pattern>

	<!-- Configs -->
	<config name="minimum_supported_wp_version" value="6.0" />
	<config name="testVersion" value="7.3-" />

	<!-- Rules -->
	<rule ref="WooCommerce-Core" >
		<exclude name="Generic.Commenting.Todo"/>

		<!-- This rule is currently generating some false positives, it would be worth retrying after PHPCS upgrades -->
		<exclude name="Squiz.Commenting.FunctionCommentThrowTag.WrongNumber"/>
		<exclude name="Squiz.Commenting.FunctionComment.EmptyThrows"/>
		<exclude name="Universal.Arrays.DisallowShortArraySyntax.Found"/>

		<!-- FIXME: Remove these ignores once https://github.com/Automattic/woocommerce-payments/issues/8434 is closed. -->
		<exclude name="WordPress.Security.EscapeOutput.ExceptionNotEscaped" />
		<exclude name="WordPress.Security.EscapeOutput.OutputNotEscaped" />
		<exclude name="WordPress.Security.ValidatedSanitizedInput.InputNotValidated" />

		<!-- FIXME: Remove these ignores once https://github.com/Automattic/woocommerce-payments/issues/8435 is closed. -->
		<exclude name="WordPress.WP.AlternativeFunctions.unlink_unlink" />
		<exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_touch" />
		<exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_file_put_contents" />

		<!-- FIXME: Remove these ignores once https://github.com/Automattic/woocommerce-payments/issues/8436 is closed. -->
		<exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.Found" />
		<exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundAfterLastUsed" />

		<!-- FIXME: Remove these ignores once https://github.com/Automattic/woocommerce-payments/issues/8437 is clsoed. -->
		<exclude name="WooCommerce.Commenting.CommentHooks.MissingHookComment" />
		<exclude name="WooCommerce.Commenting.CommentHooks.MissingSinceComment" />
		<exclude name="WooCommerce.Commenting.CommentHooks.HookCommentWrongStyle" />

		<!-- FIXME: Remove these ignores once https://github.com/Automattic/woocommerce-payments/issues/8438 is closed. -->
		<exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames.boolFound" />
		<exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames.elseFound" />
		<exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames.arrayFound" />
		<exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames.classFound" />
		<exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames.matchFound" />
		<exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames.objectFound" />
		<exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames.returnFound" />
		<exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames.stringFound" />
		<exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames.defaultFound" />
		<exclude name="Universal.NamingConventions.NoReservedKeywordParameterNames.functionFound" />
	</rule>

	<!-- Disallow long array syntax -->
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array" value="woocommerce-payments" />
		</properties>
	</rule>

	<rule ref="WordPress.Security.EscapeOutput">
		<properties>
			<property name="customEscapingFunctions" type="array" value="WC_Payments_Utils,esc_interpolated_html" />
		</properties>
	</rule>

	<rule ref="PHPCompatibility">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<rule ref="WordPress.Files.FileName">
		<exclude-pattern>tests/*</exclude-pattern>
		<exclude-pattern>includes/multi-currency</exclude-pattern>
		<exclude-pattern>src</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.Capabilities">
		<properties>
			<property name="custom_capabilities" type="array">
				<element value="manage_woocommerce" />
				<element value="pay_for_order" />
				<element value="read_private_shop_orders" />
			</property>
		</properties>
	</rule>

	<rule ref="Generic.Commenting">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<rule ref="Squiz.Commenting.FunctionComment">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<rule ref="Squiz.Commenting.FunctionCommentThrowTag.Missing" />

	<rule ref="Universal.Files.SeparateFunctionsFromOO.Mixed">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<!-- We don't need to do nonce checks in unit test code -->
	<rule ref="WordPress.Security.NonceVerification.Recommended">
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

	<rule ref="PEAR.WhiteSpace.ObjectOperatorIndent" />

	<!-- Custom WCPay rules -->
	<rule ref="./dev/phpcs/ruleset.xml"/>

	<!-- Check the class structure (ordering of methods, properties, etc.) -->
	<rule ref="SlevomatCodingStandard.Classes.ClassStructure">
		<properties>
			<property name="groups" type="array">
				<element value="uses"/>
				<element value="constants"/>
				<element value="properties"/>
				<element value="enum cases"/>

				<element value="constructor, static constructors"/>
				<element value="abstract methods" />
				<element value="all public methods, magic methods"/>
				<element value="protected methods"/>
				<element value="methods"/>
			</property>
		</properties>
		<include-pattern>src/*</include-pattern>
		<exclude-pattern>tests/</exclude-pattern>
	</rule>

</ruleset>

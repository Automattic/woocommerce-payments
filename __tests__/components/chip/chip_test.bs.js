// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Jest from "@glennsl/bs-jest/src/jest.js";
import * as React from "react";
import * as ReactTestingLibrary from "bs-react-testing-library/src/ReactTestingLibrary.bs.js";
import * as Chip$WoocommercePayments from "../../../client/components/chip/chip.bs.js";

Jest.describe("Chip (ReasonML)", (function (param) {
        var renderChip = function (chipType, message) {
          return ReactTestingLibrary.render(undefined, undefined, undefined, undefined, undefined, React.createElement(Chip$WoocommercePayments.make, {
                          message: message,
                          chipType: chipType
                        })).container;
        };
        Jest.test("Renders an alert chip", (function (param) {
                return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(renderChip(/* Alert */3, "Alert message")));
              }));
        Jest.test("Renders a primary chip", (function (param) {
                return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(renderChip(/* Primary */0, "Primary message")));
              }));
        Jest.test("Renders a light chip", (function (param) {
                return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(renderChip(/* Light */1, "Light message")));
              }));
        Jest.test("Renders a warning chip", (function (param) {
                return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(renderChip(/* Warning */2, "Alert message")));
              }));
        Jest.test("Renders primary when using default type", (function (param) {
                return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(renderChip(/* Default */4, "Message")));
              }));
        return Jest.test("Renders primary when no type provided", (function (param) {
                      return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(ReactTestingLibrary.render(undefined, undefined, undefined, undefined, undefined, React.createElement(Chip$WoocommercePayments.make, {
                                              message: "Message"
                                            })).container));
                    }));
      }));

export {
  
}
/*  Not a pure module */

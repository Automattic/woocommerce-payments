// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Belt_MapString from "bs-platform/lib/es6/belt_MapString.js";

function getChargeState(state, id) {
  return Belt_MapString.getWithDefault(state, id, {
              data: undefined,
              error: undefined
            });
}

function updateCharge(state, id, data) {
  var init = getChargeState(state, id);
  return Belt_MapString.set(state, id, {
              data: data,
              error: init.error
            });
}

function updateChargeError(state, id, error) {
  var init = getChargeState(state, id);
  return Belt_MapString.set(state, id, {
              data: init.data,
              error: error
            });
}

function getState(state) {
  if (state !== undefined) {
    return Caml_option.valFromOption(state);
  } else {
    return Belt_MapString.fromArray([]);
  }
}

function receiveCharges(state, $$event) {
  var match = $$event.type;
  switch (match) {
    case "SET_CHARGE" :
        return updateCharge(getState(state), $$event.id, $$event.data);
    case "SET_ERROR_FOR_CHARGE" :
        return updateChargeError(getState(state), $$event.id, $$event.error);
    default:
      return getState(state);
  }
}

export {
  getChargeState ,
  updateCharge ,
  updateChargeError ,
  getState ,
  receiveCharges ,
  
}
/* No side effect */

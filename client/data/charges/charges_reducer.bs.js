// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");

function getChargeState(state, id) {
  return Belt_MapString.getWithDefault(state, id, {
              data: undefined,
              error: undefined
            });
}

function updateCharge(state, id, data) {
  var init = getChargeState(state, id);
  return Belt_MapString.set(state, id, {
              data: data,
              error: init.error
            });
}

function updateChargeError(state, id, error) {
  var init = getChargeState(state, id);
  return Belt_MapString.set(state, id, {
              data: init.data,
              error: error
            });
}

function getState(state) {
  if (state !== undefined) {
    return Caml_option.valFromOption(state);
  } else {
    return Belt_MapString.fromArray([]);
  }
}

function receiveCharges(state, $$event) {
  var match = $$event.type;
  switch (match) {
    case "SET_CHARGE" :
        return updateCharge(getState(state), $$event.id, $$event.data);
    case "SET_ERROR_FOR_CHARGE" :
        return updateChargeError(getState(state), $$event.id, $$event.error);
    default:
      return getState(state);
  }
}

var $$default = receiveCharges;

exports.getChargeState = getChargeState;
exports.updateCharge = updateCharge;
exports.updateChargeError = updateChargeError;
exports.getState = getState;
exports.receiveCharges = receiveCharges;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* No side effect */

// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as StyleScss from "./style.scss";
import * as Currency from "@woocommerce/currency";
import * as Components from "@wordpress/components";
import * as Components$1 from "@woocommerce/components";
import * as Charge$WoocommercePayments from "../../data/types/Charge.bs.js";
import * as PaymentDetailsSummaryGen from "./PaymentDetailsSummary.gen";
import * as Loadable$WoocommercePayments from "../../components/loadable/loadable.bs.js";
import * as LoadableBlock$WoocommercePayments from "../../components/loadable/LoadableBlock.bs.js";
import * as PaymentStatus$WoocommercePayments from "../../data/types/PaymentStatus.bs.js";
import * as HorizontalList$WoocommercePayments from "../../components/horizontal-list/HorizontalList.bs.js";
import * as PaymentStatusChip$WoocommercePayments from "../../components/payment-status-chip/PaymentStatusChip.bs.js";
import * as ShortPaymentMethod$WoocommercePayments from "../../components/payment-method-details/ShortPaymentMethod.bs.js";

var Card = {};

var Button = {};

function __(prim, prim$1) {
  return PaymentDetailsSummaryGen.__(prim, prim$1);
}

function dateI18n(prim, prim$1) {
  return PaymentDetailsSummaryGen.dateI18n(prim, prim$1);
}

function moment(prim) {
  return PaymentDetailsSummaryGen.moment(prim);
}

function _style(prim) {
  return StyleScss.style(prim);
}

var currency = new Currency.default();

function composeSummaryItems(charge) {
  var match = Belt_Option.getWithDefault(Belt_Option.map(charge.outcome, (function (o) {
              return o.risk_level;
            })), /* Normal */0);
  var tmp;
  switch (match) {
    case /* Normal */0 :
        tmp = PaymentDetailsSummaryGen.__("Normal", "woocommerce-payments");
        break;
    case /* Elevated */1 :
        tmp = PaymentDetailsSummaryGen.__("Elevated", "woocommerce-payments");
        break;
    case /* Highest */2 :
        tmp = PaymentDetailsSummaryGen.__("Highest", "woocommerce-payments");
        break;
    case /* Unknown */3 :
        tmp = "–";
        break;
    
  }
  return [
          {
            title: PaymentDetailsSummaryGen.__("Date", "woocommerce-payments"),
            content: charge.created > 0.0 ? PaymentDetailsSummaryGen.dateI18n("M j, Y, g:ia", PaymentDetailsSummaryGen.moment(charge.created * 1000.0)) : "–"
          },
          {
            title: PaymentDetailsSummaryGen.__("Customer", "woocommerce-payments"),
            content: Belt_Option.getWithDefault(charge.billing_details.name, "\xe2\x80\x93")
          },
          {
            title: PaymentDetailsSummaryGen.__("Payment method", "woocommerce-payments"),
            content: React.createElement(ShortPaymentMethod$WoocommercePayments.make, {
                  payment: charge.payment_method_details
                })
          },
          {
            title: PaymentDetailsSummaryGen.__("Risk evaluation", "woocommerce-payments"),
            content: tmp
          },
          {
            title: PaymentDetailsSummaryGen.__("", "woocommerce-payments"),
            content: "" === charge.id ? "–" : charge.id
          }
        ];
}

function PaymentDetailsSummary(Props) {
  var charge = Props.charge;
  var isLoading = Props.isLoading;
  var match = Charge$WoocommercePayments.Util.getAmounts(charge);
  var refunded = match.refunded;
  return React.createElement(Components$1.Card, {
              className: "payment-details-summary-details",
              children: null
            }, React.createElement("div", {
                  className: "payment-details-summary"
                }, React.createElement("div", {
                      className: "payment-details-summary__section"
                    }, React.createElement("p", {
                          className: "payment-details-summary__amount"
                        }, React.createElement(Loadable$WoocommercePayments.make, {
                              isLoading: isLoading,
                              placeholder: "Amount placeholder",
                              children: null
                            }, Curry._1(currency.formatCurrency, charge.amount / 100.0), React.createElement("span", {
                                  className: "payment-details-summary__amount-currency"
                                }, "" === charge.currency ? "cur" : charge.currency), React.createElement(PaymentStatusChip$WoocommercePayments.make, {
                                  status: PaymentStatus$WoocommercePayments.fromCharge(charge)
                                }))), React.createElement("div", {
                          className: "payment-details-summary__breakdown"
                        }, refunded > 0 ? React.createElement("p", undefined, PaymentDetailsSummaryGen.__("Refunded", "woocommerce-payments") + (": " + Curry._1(currency.formatCurrency, (-refunded | 0) / 100.0))) : null, React.createElement("p", undefined, React.createElement(Loadable$WoocommercePayments.make, {
                                  isLoading: isLoading,
                                  placeholder: "Fee amount",
                                  children: PaymentDetailsSummaryGen.__("Fee", "woocommerce-payments") + (": " + Curry._1(currency.formatCurrency, (-match.fee | 0) / 100.0))
                                })), React.createElement("p", undefined, React.createElement(Loadable$WoocommercePayments.make, {
                                  isLoading: isLoading,
                                  placeholder: "Net amount",
                                  children: PaymentDetailsSummaryGen.__("Net", "woocommerce-payments") + (": " + Curry._1(currency.formatCurrency, match.net / 100.0))
                                })))), React.createElement("div", {
                      className: "payment-details-summary__section"
                    }, React.createElement("div", {
                          className: "payment-details-summary__actions"
                        }, Belt_Option.getWithDefault(Belt_Option.map(charge.order, (function (order) {
                                    return React.createElement(Components.Button, {
                                                className: "payment-details-summary__actions-item",
                                                isDefault: true,
                                                isLarge: true,
                                                href: order.url,
                                                children: PaymentDetailsSummaryGen.__("View order", "woocommerce-payments") + (" #" + order.number)
                                              });
                                  })), null)))), React.createElement("hr", {
                  className: "full-width"
                }), React.createElement(LoadableBlock$WoocommercePayments.make, {
                  numLines: 4,
                  isLoading: isLoading,
                  children: React.createElement(HorizontalList$WoocommercePayments.make, {
                        items: composeSummaryItems(charge)
                      })
                }));
}

var make = PaymentDetailsSummary;

var $$default = PaymentDetailsSummary;

export {
  Card ,
  Button ,
  __ ,
  dateI18n ,
  moment ,
  _style ,
  currency ,
  composeSummaryItems ,
  make ,
  $$default ,
  $$default as default,
  
}
/* currency Not a pure module */

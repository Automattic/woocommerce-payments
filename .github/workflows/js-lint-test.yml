name: JS linting and tests

on:
  pull_request

jobs:
  lint:
    name:    JS linting
    runs-on: ubuntu-18.04
    steps:
      # clone the repository
      - uses: actions/checkout@v2
      # use the project's pinned Node.js version
      - name: Read .nvmrc
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm
      - name: Use Node.js ${{ steps.nvm.outputs.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      # enable dependencies caching
      - uses: actions/cache@v2
        with:
          path: ~/.cache/composer/
          key:  ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm/
          key:  ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
      # install dependencies and run linter
      - run: npm -v && node -v && npm ci && npm run lint:js && npm run lint:css

  test:
    name:    JS testing
    runs-on: ubuntu-18.04
    steps:
      # clone the repository
      - uses: actions/checkout@v2
      # use the project's pinned Node.js version
      - name: Read .nvmrc
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm
      - name: Use Node.js ${{ steps.nvm.outputs.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      # enable dependencies caching
      - uses: actions/cache@v2
        with:
          path: ~/.cache/composer/
          key:  ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm/
          key:  ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
      # install dependencies and run linter
      - run: npm ci && npm run test:js

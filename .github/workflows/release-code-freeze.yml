name: "Release - Code freeze"

# This action will run according to the cron schedule or when triggered manually
on:
  schedule:
    - cron: '0 12 * * 0' # Run at 1200 UTC on Sundays.
  workflow_dispatch:
    inputs:
      skipSlackPing:
        description: "Skip the Slack ping"
        type: boolean
        required: false
        default: false

defaults:
  run:
    shell: bash

jobs:
  check-code-freeze:
    name: "Check that today is the day of the code freeze"
    runs-on: ubuntu-20.04
    outputs:
      freeze: 1
      nextReleaseVersion: "9.5.0"
      nextReleaseDate: "2026-01-01"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
        with:
          ref: 'develop'

  create-release-pr:
    name: "Raise a PR to trunk"
    needs: check-code-freeze
    if: needs.check-code-freeze.outputs.freeze == 1
    uses: ./.github/workflows/release-pr.yml
    with:
      releaseVersion: ${{ needs.check-code-freeze.outputs.nextReleaseVersion }}
    secrets: inherit

  slack-notification-pr-comment:
    name: "Send notification to Slack & comment on PR"
    needs: [check-code-freeze, create-release-pr]
    if: ${{ ! ( inputs.skipSlackPing && needs.create-release-pr.outputs.release-pr-id ) }}
    runs-on: ubuntu-20.04
    env:
      RELEASE_VERSION: ${{ needs.check-code-freeze.outputs.nextReleaseVersion }}
      RELEASE_DATE: ${{ needs.check-code-freeze.outputs.nextReleaseDate }}
      RELEASE_PR_ID: ${{ needs.create-release-pr.outputs.release-pr-id }}
    steps:
      - name: "Slack ping"
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.CODE_FREEZE_SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          # For posting a rich message using Block Kit (https://api.slack.com/messaging/interactivity)
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Code freeze notification",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "The automated workflow just did the following actions:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "• Created a release branch `release/${{ env.RELEASE_VERSION }}` \n • Raised a <https://github.com/Automattic/woocommerce-payments/pull/${{ env.RELEASE_PR_ID }}|Pull Request> to `trunk`\n • Built a <https://github.com/Automattic/woocommerce-payments/actions/runs/${{ github.run_id }}|zip file and ran smoke tests> against it"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "If you absolutely need to include a PR that was not merged in `develop` yet, please consult the release lead."
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Version:*\n${{ env.RELEASE_VERSION }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Planned date:*\n<https://wcpay.wordpress.com/dev-resources/wc-payments-release-calendar/|${{ env.RELEASE_DATE }}>"
                    }
                  ]
                }
              ]
            }

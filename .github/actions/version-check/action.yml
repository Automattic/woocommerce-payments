name: "Check the format of a version"
description: "Checks the format of a version, whether that is a pre-release or release context"

inputs:
  version:
    description: "The version that the action should check (e.g. 4.5.0 or 4.5.0-test-2)"
    required: true
  is-pre-release:
    description: "Whether the action runs in the context of a pre-release (default: true)"
    required: true
    default: "true"
    
outputs:
  trimmed-version:
    description: "The trimmed version"
    value: ${{ steps.version_format_check.outputs.VERSION }}

runs:
  using: composite
  steps:
    - name: "Check the format of the version"
      id: version_format_check
      shell: bash
      env:
        IS_PRERELEASE: ${{ inputs.is-pre-release }}
        VERSION: ${{ inputs.version }}
      run: |
        # Trim leading and ending whitespaces
        TRIMMED_VERSION=$(echo "$VERSION" | xargs) 

        if ${{ env.IS_PRERELEASE == 'true' }}; then
          VERSION_FORMAT="^[0-9]+\.[0-9]\.[0-9]-test-[1-9]$"
        else
          VERSION_FORMAT="^[0-9]+\.[0-9]\.[0-9]$"
        fi

        if [[ $TRIMMED_VERSION =~ $VERSION_FORMAT ]]; then
          echo "VERSION=$TRIMMED_VERSION" >> $GITHUB_OUTPUT
        else
          echo "::error::The version provided doesn't respect the format expected (version: $TRIMMED_VERSION; format: $VERSION_FORMAT)."
          exit 1
        fi

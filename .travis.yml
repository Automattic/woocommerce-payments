language: php

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

# Specify multiple parallel jobs to run in two ways
# See docs for more info: https://docs.travis-ci.com/user/build-matrix/

# 1. Let Travis automatically create a matrix of all combinations of PHP versions
# (the ones listed under `php`), and environments (listed under `env`) and test
# against all those combinations.

# Test main supported versions of PHP against latest WP.
php:
  - 5.6
  - 7.0
  - 7.1
  - 7.2
  - 7.3


# Different stages in order to only deploy when everything succeeds
stages:
  - test
  - name: deploy
    if: branch = master

env:
  - WP_VERSION=latest WC_VERSION=latest

# 2. Also test against these combinations, as listed out explicitly one by one

# Additional tests against stable PHP (min recommended version is 5.6) and past supported versions of WP
# and code coverage report.
matrix:
  fast_finish: true
  include:
  # - php: 5.2
  #   dist: precise
  #   stage: test
  # - php: 5.3
  #   dist: precise
  #   stage: test
  - name: "Coding standard check"
    php: 7.2
    env: WP_VERSION=latest RUN_PHPCS=1
    stage: test
  - php: 7.3
    env: WP_VERSION=latest
    stage: test
  - name: "PHP 7.3 unit tests using WordPress nightly"
    php: 7.3
    env: WP_VERSION=nightly
    stage: test
  - name: "Deployment to Pressable"
    stage: deploy
    env: SHOULD_DEPLOY=1
    addons:
      apt:
        packages:
        - lftp

before_script:
  - |
    if [[ ${TRAVIS_PHP_VERSION:0:3} != "5.2" ]] &&
      [[ ${TRAVIS_PHP_VERSION:0:3} != "5.3" ]] &&
      [[ ${TRAVIS_PHP_VERSION:0:3} != "5.6" ]] &&
      [[ ${TRAVIS_PHP_VERSION:0:3} != "7.0" ]] &&
      [[ $SHOULD_DEPLOY != 1 ]]; then
      composer install
    fi
  - |
    if [[ $SHOULD_DEPLOY != 1 ]]; then
      bash ./bin/install-wp-tests.sh woocommerce_test root '' localhost $WP_VERSION false $WC_VERSION
    fi

script:
  - bash bin/phpunit.sh
  - bash bin/phpcs.sh

before_deploy:
  - npm install

deploy:
  provider: script
  script: bash bin/deploy-to-test-site.sh
  skip_cleanup: true
  on:
    branch: master
    condition: $SHOULD_DEPLOY = 1
